#include<stdio.h>
#include<algorithm>
#include<iostream>
#include<stdlib.h>
#include<string.h>
#include<math.h>
#include<queue>
using namespace std;
typedef long long LL;
pair<LL,LL>exgcd(LL n,LL m);
LL solve(LL x, LL y,LL n,LL m);
LL gcd(LL n,LL m);
int main(void)
{
    LL n,m,k;
    int N;
    int __ca = 0;
    scanf("%d",&N);
    while(N--)
    {
        scanf("%lld %lld",&n,&m);
        LL x1,y1,x2,y2;
        n*=2;
        m*=2;
        scanf("%lld %lld %lld %lld",&x1,&y1,&x2,&y2);
        x1*=2;
        y1*=2,x2*=2;
        y2*=2;
        printf("Case #%d:\n",++__ca);
        if(x1==x2&&y1==y2)
        {
            printf("%.1f %.1f\n",x1/2,y1/2);
        }
        else if(x1==x2)
        {
            LL ty = (2*m-(y1+y2))/2;
            LL yy = min(y1,y2)+ty;
            LL xx = min(x1,x2)+ ty;
            if((xx/n)%2==0)
            {
                xx = xx%n;
                //if(xx == 0)xx = n;
            }
            else
            {
                xx = ((n-xx)%n+n)%n;
            }
            if((yy/m)%2==0)
            {
                yy = yy%m;
                //if(yy == 0)yy = m;
            }
            else
            {
                yy = ((m-yy)%m+m)%m;
            }
            printf("%.1lf %.1lf\n",xx/2.0,yy/2.0);
        }
        else if(y1 == y2)
        {
            LL tx = (2*n-(x1+x2))/2;
            LL yy = min(y1,y2)+tx;
            LL xx = min(x1,x2)+tx;
            if((yy/m)%2==0)
            {
                yy = yy%m;
            }
            else
            {
                yy = ((m-yy)%m+m)%m;
            }
            if((xx/n)%2==0)
            {
                xx = xx%n;
            }
            else
            {
                xx = ((n-xx)%n+n)%n;
            }
            printf("%.1lf %.1lf\n",xx/2.0,yy/2.0);
        }
        else
        {
            LL ty = (2*m-(y1+y2))/2;
            LL tx = (2*n-(x1+x2))/2;
            LL ask = solve(ty,tx,n,m);
            if(ask==1e18)
                printf("Collision will not happen.\n");
            else
            {
                LL yy = y1+ask;
                if((yy/m)%2==0)
                {
                    yy = yy%m;
                    //if(yy == 0)yy = m;
                }
                else
                {
                    yy = ((m-yy)%m+m)%m;
                }
                LL xx = x1+ask;
                if((xx/n)%2==0)
                {
                    xx = xx%n;
                    //if(xx == 0)xx = n;
                }
                else
                {
                    xx = ((n-xx)%n+n)%n;
                }
                printf("%.1lf %.1lf\n",xx/2.0,yy/2.0);
            }
        }

    }
    return 0;
}
pair<LL,LL>exgcd(LL n,LL m)
{
    if(m==0)
        return make_pair(1,0);
    else
    {
        pair<LL,LL>ak = exgcd(m,n%m);
        return make_pair(ak.second,ak.first-(n/m)*ak.second);
    }
}
LL solve(LL x, LL y,LL n,LL m)
{
    LL cc = n;
    LL c = x-y;
    LL gc = gcd(n,m);
    if(c%gc)return 1e18;
    else
    {
        c/=gc;
        n/=gc;
        m/=gc; pair<LL,LL>ak = exgcd(n,m);
        LL x0 = (ak.first*c%m+m)%m;
        LL lcm = (LL)m*cc;
        x = x-cc*x0;
        x = x%lcm+lcm;
        x%=lcm;
        return x;
    }
}
LL gcd(LL n,LL m)
{
    if(m==0)return n;
    else return gcd(m,n%m);
}

